<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="2087px" preserveAspectRatio="none" style="width:1381px;height:2087px;" version="1.1" viewBox="0 0 1381 2087" width="1381px" zoomAndPan="magnify"><defs><filter height="300%" id="f1t6s3q0yq7gcc" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[ef3cb5a125733393f4a6bf7784e2c9ba]
class C_0000406813343211604253--><rect fill="#FEFECE" filter="url(#f1t6s3q0yq7gcc)" height="107.2188" id="C_0000406813343211604253" style="stroke: #A80036; stroke-width: 1.5;" width="259" x="170.5" y="59.5"/><ellipse cx="259.75" cy="75.5" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M259.8594,70.8438 L258.7031,75.9219 L261.0313,75.9219 L259.8594,70.8438 Z M258.375,68.6094 L261.3594,68.6094 L264.7188,81 L262.2656,81 L261.5,77.9375 L258.2188,77.9375 L257.4688,81 L255.0313,81 L258.375,68.6094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="72" x="280.25" y="79.6543">Component</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="171.5" x2="428.5" y1="91.5" y2="91.5"/><ellipse cx="181.5" cy="102.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="190.5" y="105.7104">Component(std::string label) : void</text><ellipse cx="181.5" cy="115.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="233" x="190.5" y="118.5151">~Component() constexpr = default : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="171.5" x2="428.5" y1="125.1094" y2="125.1094"/><ellipse cx="181.5" cy="136.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="96" x="190.5" y="139.3198">draw() = 0 : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="171.5" x2="428.5" y1="145.9141" y2="145.9141"/><polygon fill="none" points="181.5,151.9141,185.5,155.9141,181.5,159.9141,177.5,155.9141" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="190.5" y="160.1245">label_ : std::string</text><!--MD5=[ab5c8f094a936aa147a058940ed30173]
class C_0001764073242192532238--><rect fill="#FEFECE" filter="url(#f1t6s3q0yq7gcc)" height="320.0938" id="C_0001764073242192532238" style="stroke: #A80036; stroke-width: 1.5;" width="571" x="103.5" y="1756"/><ellipse cx="365.75" cy="1772" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M368.7188,1777.6406 Q368.1406,1777.9375 367.5,1778.0781 Q366.8594,1778.2344 366.1563,1778.2344 Q363.6563,1778.2344 362.3281,1776.5938 Q361.0156,1774.9375 361.0156,1771.8125 Q361.0156,1768.6875 362.3281,1767.0313 Q363.6563,1765.375 366.1563,1765.375 Q366.8594,1765.375 367.5,1765.5313 Q368.1563,1765.6875 368.7188,1765.9844 L368.7188,1768.7031 Q368.0938,1768.125 367.5,1767.8594 Q366.9063,1767.5781 366.2813,1767.5781 Q364.9375,1767.5781 364.25,1768.6563 Q363.5625,1769.7188 363.5625,1771.8125 Q363.5625,1773.9063 364.25,1774.9844 Q364.9375,1776.0469 366.2813,1776.0469 Q366.9063,1776.0469 367.5,1775.7813 Q368.0938,1775.5 368.7188,1774.9219 L368.7188,1777.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="38" x="386.25" y="1776.1543">Image</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="104.5" x2="673.5" y1="1788" y2="1788"/><ellipse cx="114.5" cy="1799" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="123.5" y="1802.2104">Image() = default : void</text><ellipse cx="114.5" cy="1811.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="264" x="123.5" y="1815.0151">Image(int width, int height, int channels) : void</text><ellipse cx="114.5" cy="1824.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="535" x="123.5" y="1827.8198">Image(int width, int height, int channels, std::unique_ptr&lt;unsigned char[]&gt; image_data) : void</text><ellipse cx="114.5" cy="1837.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="196" x="123.5" y="1840.6245">Image(const Image &amp; other) : void</text><ellipse cx="114.5" cy="1850.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="248" x="123.5" y="1853.4292">Image(Image &amp;&amp;) noexcept = default : void</text><ellipse cx="114.5" cy="1863.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="123.5" y="1866.2339">~Image() = default : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="104.5" x2="673.5" y1="1872.8281" y2="1872.8281"/><ellipse cx="114.5" cy="1883.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="245" x="123.5" y="1887.0386">operator=(const Image &amp; other) : Image &amp;</text><ellipse cx="114.5" cy="1896.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="297" x="123.5" y="1899.8433">operator=(Image &amp;&amp;) noexcept = default : Image &amp;</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="104.5" x2="673.5" y1="1906.4375" y2="1906.4375"/><ellipse cx="114.5" cy="1917.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="123.5" y="1920.6479">as_eigen_mask() : Eigen::MatrixXi</text><ellipse cx="114.5" cy="1930.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="123.5" y="1933.4526">channels() const : int</text><ellipse cx="114.5" cy="1943.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="123.5" y="1946.2573">data() const : unsigned char *</text><ellipse cx="114.5" cy="1955.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="321" x="123.5" y="1959.062">get_pixel(int x, int y) const : std::vector&lt;unsigned char&gt;</text><ellipse cx="114.5" cy="1968.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="123.5" y="1971.8667">height() const : int</text><ellipse cx="114.5" cy="1981.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="545" x="123.5" y="1984.6714">initialize(int width, int height, int channels, std::unique_ptr&lt;unsigned char[]&gt; image_data) : void</text><ellipse cx="114.5" cy="1994.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="407" x="123.5" y="1997.4761">set_pixel(int x, int y, const std::vector&lt;unsigned char&gt; &amp; values) : void</text><ellipse cx="114.5" cy="2007.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="123.5" y="2010.2808">width() const : int</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="104.5" x2="673.5" y1="2016.875" y2="2016.875"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="111.5" y="2024.875"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="83" x="123.5" y="2031.0854">channels_ : int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="111.5" y="2037.6797"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="67" x="123.5" y="2043.8901">height_ : int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="111.5" y="2050.4844"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="277" x="123.5" y="2056.6948">image_data_ : std::unique_ptr&lt;unsigned char[]&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="111.5" y="2063.2891"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="62" x="123.5" y="2069.4995">width_ : int</text><!--MD5=[1fa158b98ea9db1affb6e36c087c7bf3]
class C_0000601154877475481518--><rect fill="#FEFECE" filter="url(#f1t6s3q0yq7gcc)" height="248.0703" id="C_0000601154877475481518" style="stroke: #A80036; stroke-width: 1.5;" width="445" x="77.5" y="292"/><ellipse cx="258.25" cy="308" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M261.2188,313.6406 Q260.6406,313.9375 260,314.0781 Q259.3594,314.2344 258.6563,314.2344 Q256.1563,314.2344 254.8281,312.5938 Q253.5156,310.9375 253.5156,307.8125 Q253.5156,304.6875 254.8281,303.0313 Q256.1563,301.375 258.6563,301.375 Q259.3594,301.375 260,301.5313 Q260.6563,301.6875 261.2188,301.9844 L261.2188,304.7031 Q260.5938,304.125 260,303.8594 Q259.4063,303.5781 258.7813,303.5781 Q257.4375,303.5781 256.75,304.6563 Q256.0625,305.7188 256.0625,307.8125 Q256.0625,309.9063 256.75,310.9844 Q257.4375,312.0469 258.7813,312.0469 Q259.4063,312.0469 260,311.7813 Q260.5938,311.5 261.2188,310.9219 L261.2188,313.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="75" x="278.75" y="312.1543">ImageEditor</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="78.5" x2="521.5" y1="324" y2="324"/><ellipse cx="88.5" cy="335" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="419" x="97.5" y="338.2104">ImageEditor(const std::string &amp; label, const std::string &amp; filename) : void</text><ellipse cx="88.5" cy="347.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="97.5" y="351.0151">~ImageEditor() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="78.5" x2="521.5" y1="357.6094" y2="357.6094"/><ellipse cx="88.5" cy="368.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="97.5" y="371.8198">draw() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="85.5" y="378.4141"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="147" x="97.5" y="384.6245">draw_image() const : void</text><ellipse cx="88.5" cy="394.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="97.5" y="397.4292">get_image_size() const : ImVec2</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="85.5" y="404.0234"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="97.5" y="410.2339">load_gltexture() const : void</text><ellipse cx="88.5" cy="419.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="277" x="97.5" y="423.0386">save_to_disk(const std::string &amp; filename) : void</text><ellipse cx="88.5" cy="432.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227" x="97.5" y="435.8433">set_position(const ImVec2 &amp; pos) : void</text><ellipse cx="88.5" cy="445.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="97.5" y="448.6479">update() : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="78.5" x2="521.5" y1="455.2422" y2="455.2422"/><polygon fill="none" points="88.5,461.2422,92.5,465.2422,88.5,469.2422,84.5,465.2422" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="97.5" y="469.4526">data_ : std::shared_ptr&lt;Image&gt;</text><polygon fill="none" points="88.5,474.0469,92.5,478.0469,88.5,482.0469,84.5,478.0469" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="97.5" y="482.2573">filename_ : std::string</text><polygon fill="none" points="88.5,486.8516,92.5,490.8516,88.5,494.8516,84.5,490.8516" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="97.5" y="495.062">image_height_ : int</text><polygon fill="none" points="88.5,499.6563,92.5,503.6563,88.5,507.6563,84.5,503.6563" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103" x="97.5" y="507.8667">image_width_ : int</text><polygon fill="none" points="88.5,512.4609,92.5,516.4609,88.5,520.4609,84.5,516.4609" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="97.5" y="520.6714">position_ : ImVec2</text><polygon fill="none" points="88.5,525.2656,92.5,529.2656,88.5,533.2656,84.5,529.2656" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="97.5" y="533.4761">tex_id_ : GLuint</text><!--MD5=[13d1f6d4ce7855fff4130a897375226f]
class C_0001353273692217991106--><rect fill="#FEFECE" filter="url(#f1t6s3q0yq7gcc)" height="312.0938" id="C_0001353273692217991106" style="stroke: #A80036; stroke-width: 1.5;" width="1013" x="162.5" y="1383"/><ellipse cx="640.25" cy="1399" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M643.2188,1404.6406 Q642.6406,1404.9375 642,1405.0781 Q641.3594,1405.2344 640.6563,1405.2344 Q638.1563,1405.2344 636.8281,1403.5938 Q635.5156,1401.9375 635.5156,1398.8125 Q635.5156,1395.6875 636.8281,1394.0313 Q638.1563,1392.375 640.6563,1392.375 Q641.3594,1392.375 642,1392.5313 Q642.6563,1392.6875 643.2188,1392.9844 L643.2188,1395.7031 Q642.5938,1395.125 642,1394.8594 Q641.4063,1394.5781 640.7813,1394.5781 Q639.4375,1394.5781 638.75,1395.6563 Q638.0625,1396.7188 638.0625,1398.8125 Q638.0625,1400.9063 638.75,1401.9844 Q639.4375,1403.0469 640.7813,1403.0469 Q641.4063,1403.0469 642,1402.7813 Q642.5938,1402.5 643.2188,1401.9219 L643.2188,1404.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="49" x="660.75" y="1403.1543">Poisson</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="163.5" x2="1174.5" y1="1415" y2="1415"/><ellipse cx="173.5" cy="1426" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="88" x="182.5" y="1429.2104">Poisson() : void</text><ellipse cx="173.5" cy="1438.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="182.5" y="1442.0151">~Poisson() = default : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="163.5" x2="1174.5" y1="1448.6094" y2="1448.6094"/><ellipse cx="173.5" cy="1459.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="297" x="182.5" y="1462.8198">CloneTypeList() constexpr : std::vector&lt;CloneType&gt;</text><ellipse cx="173.5" cy="1472.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="420" x="182.5" y="1475.6245">CloneTypeName(const Poisson::CloneType &amp; type) constexpr : std::string</text><ellipse cx="173.5" cy="1485.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="182.5" y="1488.4292">PoissonInit() : void</text><ellipse cx="173.5" cy="1498.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="849" x="182.5" y="1501.2339">apply_mixed(const Eigen::Vector2i &amp; to_offset, const Eigen::Vector2i &amp; from_offset, const std::shared_ptr&lt;Image&gt; &amp; to, const Image &amp; from) : void</text><ellipse cx="173.5" cy="1510.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="847" x="182.5" y="1514.0386">apply_paste(const Eigen::Vector2i &amp; to_offset, const Eigen::Vector2i &amp; from_offset, const std::shared_ptr&lt;Image&gt; &amp; to, const Image &amp; from) : void</text><ellipse cx="173.5" cy="1523.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="871" x="182.5" y="1526.8433">apply_seamless(const Eigen::Vector2i &amp; to_offset, const Eigen::Vector2i &amp; from_offset, const std::shared_ptr&lt;Image&gt; &amp; to, const Image &amp; from) : void</text><ellipse cx="173.5" cy="1536.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="987" x="182.5" y="1539.6479">apply_type(const Eigen::Vector2i &amp; to_offset, const Eigen::Vector2i &amp; from_offset, const std::shared_ptr&lt;Image&gt; &amp; to, const Image &amp; from, Poisson::CloneType type) : void</text><ellipse cx="173.5" cy="1549.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="216" x="182.5" y="1552.4526">set_mask(Eigen::MatrixXi mask) : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="163.5" x2="1174.5" y1="1559.0469" y2="1559.0469"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="170.5" y="1567.0469"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="182.5" y="1573.2573">b_b_ : Eigen::VectorXd</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="170.5" y="1579.8516"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="182.5" y="1586.062">b_g_ : Eigen::VectorXd</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="170.5" y="1592.6563"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="182.5" y="1598.8667">b_r_ : Eigen::VectorXd</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="170.5" y="1605.4609"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="67" x="182.5" y="1611.6714">height_ : int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="170.5" y="1618.2656"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="182.5" y="1624.4761">index_ : Eigen::MatrixXi</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="170.5" y="1631.0703"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="182.5" y="1637.2808">mask_ : Eigen::MatrixXi</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="170.5" y="1643.875"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="57" x="182.5" y="1650.0854">num_ : int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="170.5" y="1656.6797"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="353" x="182.5" y="1662.8901">solver_ : Eigen::SimplicialLLT&lt;Eigen::SparseMatrix&lt;double&gt;&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="170.5" y="1669.4844"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="228" x="182.5" y="1675.6948">sparse_ : Eigen::SparseMatrix&lt;double&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="170.5" y="1682.2891"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="62" x="182.5" y="1688.4995">width_ : int</text><!--MD5=[6830ec5614d2bd44319d488aaff6f067]
class C_0001514060338172580813--><rect fill="#FEFECE" filter="url(#f1t6s3q0yq7gcc)" height="99.2188" id="C_0001514060338172580813" style="stroke: #A80036; stroke-width: 1.5;" width="153" x="410.5" y="1087.5"/><ellipse cx="425.5" cy="1103.5" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M429.6094,1109.5 L421.8906,1109.5 L421.8906,1097.1094 L429.6094,1097.1094 L429.6094,1099.2656 L424.3438,1099.2656 L424.3438,1101.9375 L429.1094,1101.9375 L429.1094,1104.0938 L424.3438,1104.0938 L424.3438,1107.3438 L429.6094,1107.3438 L429.6094,1109.5 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="121" x="439.5" y="1107.6543">Poisson::CloneType</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="411.5" x2="562.5" y1="1119.5" y2="1119.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="46" x="416.5" y="1133.7104">kDefault</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="38" x="416.5" y="1146.5151">kPaste</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="63" x="416.5" y="1159.3198">kSeamless</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="38" x="416.5" y="1172.1245">kMixed</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="411.5" x2="562.5" y1="1178.7188" y2="1178.7188"/><!--MD5=[aaa4b25ef5b4bbd83e12853c51695a5a]
class C_0000120826949535865607--><rect fill="#FEFECE" filter="url(#f1t6s3q0yq7gcc)" height="337.7031" id="C_0000120826949535865607" style="stroke: #A80036; stroke-width: 1.5;" width="521" x="598.5" y="968"/><ellipse cx="796.25" cy="984" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M799.2188,989.6406 Q798.6406,989.9375 798,990.0781 Q797.3594,990.2344 796.6563,990.2344 Q794.1563,990.2344 792.8281,988.5938 Q791.5156,986.9375 791.5156,983.8125 Q791.5156,980.6875 792.8281,979.0313 Q794.1563,977.375 796.6563,977.375 Q797.3594,977.375 798,977.5313 Q798.6563,977.6875 799.2188,977.9844 L799.2188,980.7031 Q798.5938,980.125 798,979.8594 Q797.4063,979.5781 796.7813,979.5781 Q795.4375,979.5781 794.75,980.6563 Q794.0625,981.7188 794.0625,983.8125 Q794.0625,985.9063 794.75,986.9844 Q795.4375,988.0469 796.7813,988.0469 Q797.4063,988.0469 798,987.7813 Q798.5938,987.5 799.2188,986.9219 L799.2188,989.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="117" x="816.75" y="988.1543">CompSourceImage</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="599.5" x2="1118.5" y1="1000" y2="1000"/><ellipse cx="609.5" cy="1011" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="459" x="618.5" y="1014.2104">CompSourceImage(const std::string &amp; label, const std::string &amp; filename) : void</text><ellipse cx="609.5" cy="1023.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="618.5" y="1027.0151">~CompSourceImage() noexcept = default : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="599.5" x2="1118.5" y1="1033.6094" y2="1033.6094"/><ellipse cx="609.5" cy="1044.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="309" x="618.5" y="1047.8198">RegionTypeList() constexpr : std::vector&lt;RegionType&gt;</text><ellipse cx="609.5" cy="1057.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="495" x="618.5" y="1060.6245">RegionTypeName(const CompSourceImage::RegionType &amp; type) constexpr : std::string</text><ellipse cx="609.5" cy="1070.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="618.5" y="1073.4292">draw() : void</text><ellipse cx="609.5" cy="1083.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="187" x="618.5" y="1086.2339">enable_selecting(bool flag) : void</text><ellipse cx="609.5" cy="1095.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="210" x="618.5" y="1099.0386">get_data() : std::shared_ptr&lt;Image&gt;</text><ellipse cx="609.5" cy="1108.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="275" x="618.5" y="1111.8433">get_poisson() const : std::shared_ptr&lt;Poisson&gt;</text><ellipse cx="609.5" cy="1121.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="618.5" y="1124.6479">get_position() const : ImVec2</text><ellipse cx="609.5" cy="1134.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="221" x="618.5" y="1137.4526">get_region() : std::shared_ptr&lt;Image&gt;</text><ellipse cx="609.5" cy="1147.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="326" x="618.5" y="1150.2573">get_region_type() const : CompSourceImage::RegionType</text><ellipse cx="609.5" cy="1159.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="218" x="618.5" y="1163.062">region_type_name() const : std::string</text><ellipse cx="609.5" cy="1172.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="618.5" y="1175.8667">select_region() : void</text><ellipse cx="609.5" cy="1185.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="342" x="618.5" y="1188.6714">set_region_type(CompSourceImage::RegionType type) : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="599.5" x2="1118.5" y1="1195.2656" y2="1195.2656"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="606.5" y="1203.2656"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112" x="618.5" y="1209.4761">draw_status_ : bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="606.5" y="1216.0703"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="80" x="618.5" y="1222.2808">end_ : ImVec2</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="606.5" y="1228.875"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="618.5" y="1235.0854">flag_enable_selecting_region_ : bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="606.5" y="1241.6797"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="214" x="618.5" y="1247.8901">poisson_ : std::shared_ptr&lt;Poisson&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="606.5" y="1254.4844"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="202" x="618.5" y="1260.6948">poly_points_ : std::vector&lt;ImVec2&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="606.5" y="1267.2891"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="265" x="618.5" y="1273.4995">region_type_ : CompSourceImage::RegionType</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="606.5" y="1280.0938"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="249" x="618.5" y="1286.3042">selected_region_ : std::shared_ptr&lt;Image&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="606.5" y="1292.8984"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="618.5" y="1299.1089">start_ : ImVec2</text><!--MD5=[912fd64414070ae99b6bbef325c9f5ba]
class C_0000367957705286128040--><rect fill="#FEFECE" filter="url(#f1t6s3q0yq7gcc)" height="86.4141" id="C_0000367957705286128040" style="stroke: #A80036; stroke-width: 1.5;" width="229" x="576.5" y="717.5"/><ellipse cx="591.5" cy="733.5" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M595.6094,739.5 L587.8906,739.5 L587.8906,727.1094 L595.6094,727.1094 L595.6094,729.2656 L590.3438,729.2656 L590.3438,731.9375 L595.1094,731.9375 L595.1094,734.0938 L590.3438,734.0938 L590.3438,737.3438 L595.6094,737.3438 L595.6094,739.5 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="197" x="605.5" y="737.6543">CompSourceImage::RegionType</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="577.5" x2="804.5" y1="749.5" y2="749.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="46" x="582.5" y="763.7104">kDefault</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="30" x="582.5" y="776.5151">kRect</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="50" x="582.5" y="789.3198">kPolygon</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="577.5" x2="804.5" y1="795.9141" y2="795.9141"/><!--MD5=[d7fdd9592f320caf523694fa561b9283]
class C_0001697244802963678042--><rect fill="#FEFECE" filter="url(#f1t6s3q0yq7gcc)" height="260.875" id="C_0001697244802963678042" style="stroke: #A80036; stroke-width: 1.5;" width="482" x="59" y="630"/><ellipse cx="238.75" cy="646" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M241.7188,651.6406 Q241.1406,651.9375 240.5,652.0781 Q239.8594,652.2344 239.1563,652.2344 Q236.6563,652.2344 235.3281,650.5938 Q234.0156,648.9375 234.0156,645.8125 Q234.0156,642.6875 235.3281,641.0313 Q236.6563,639.375 239.1563,639.375 Q239.8594,639.375 240.5,639.5313 Q241.1563,639.6875 241.7188,639.9844 L241.7188,642.7031 Q241.0938,642.125 240.5,641.8594 Q239.9063,641.5781 239.2813,641.5781 Q237.9375,641.5781 237.25,642.6563 Q236.5625,643.7188 236.5625,645.8125 Q236.5625,647.9063 237.25,648.9844 Q237.9375,650.0469 239.2813,650.0469 Q239.9063,650.0469 240.5,649.7813 Q241.0938,649.5 241.7188,648.9219 L241.7188,651.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="114" x="259.25" y="650.1543">CompTargetImage</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="60" x2="540" y1="662" y2="662"/><ellipse cx="70" cy="673" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="456" x="79" y="676.2104">CompTargetImage(const std::string &amp; label, const std::string &amp; filename) : void</text><ellipse cx="70" cy="685.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="268" x="79" y="689.0151">~CompTargetImage() noexcept = default : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="60" x2="540" y1="695.6094" y2="695.6094"/><ellipse cx="70" cy="706.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="79" y="709.8198">clone() : void</text><ellipse cx="70" cy="719.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="212" x="79" y="722.6245">clone_type_name() const : std::string</text><ellipse cx="70" cy="732.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="79" y="735.4292">draw() : void</text><ellipse cx="70" cy="745.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="251" x="79" y="748.2339">get_clone_type() const : Poisson::CloneType</text><ellipse cx="70" cy="757.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="79" y="761.0386">restore() : void</text><ellipse cx="70" cy="770.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="267" x="79" y="773.8433">set_clone_type(Poisson::CloneType type) : void</text><ellipse cx="70" cy="783.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="79" y="786.6479">set_realtime(bool flag) : void</text><ellipse cx="70" cy="796.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="363" x="79" y="799.4526">set_source(std::shared_ptr&lt;CompSourceImage&gt; source) : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="60" x2="540" y1="806.0469" y2="806.0469"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="67" y="814.0469"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="79" y="820.2573">back_up_ : std::shared_ptr&lt;Image&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="67" y="826.8516"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="79" y="833.062">clone_type_ : Poisson::CloneType</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="67" y="839.6563"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="79" y="845.8667">edit_status_ : bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="67" y="852.4609"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="79" y="858.6714">flag_realtime_updating : bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="67" y="865.2656"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="79" y="871.4761">mouse_position_ : ImVec2</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="67" y="878.0703"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="312" x="79" y="884.2808">source_image_ : std::shared_ptr&lt;CompSourceImage&gt;</text><!--MD5=[87d8447ea00f89acce86548e0d2c398c]
class C_0000701994109645822129--><rect fill="#FEFECE" filter="url(#f1t6s3q0yq7gcc)" height="209.6563" id="C_0000701994109645822129" style="stroke: #A80036; stroke-width: 1.5;" width="303" x="687.5" y="8"/><ellipse cx="811.25" cy="24" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M814.2188,29.6406 Q813.6406,29.9375 813,30.0781 Q812.3594,30.2344 811.6563,30.2344 Q809.1563,30.2344 807.8281,28.5938 Q806.5156,26.9375 806.5156,23.8125 Q806.5156,20.6875 807.8281,19.0313 Q809.1563,17.375 811.6563,17.375 Q812.3594,17.375 813,17.5313 Q813.6563,17.6875 814.2188,17.9844 L814.2188,20.7031 Q813.5938,20.125 813,19.8594 Q812.4063,19.5781 811.7813,19.5781 Q810.4375,19.5781 809.75,20.6563 Q809.0625,21.7188 809.0625,23.8125 Q809.0625,25.9063 809.75,26.9844 Q810.4375,28.0469 811.7813,28.0469 Q812.4063,28.0469 813,27.7813 Q813.5938,27.5 814.2188,26.9219 L814.2188,29.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="47" x="831.75" y="28.1543">Window</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="688.5" x2="989.5" y1="40" y2="40"/><ellipse cx="698.5" cy="51" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="277" x="707.5" y="54.2104">Window(const std::string &amp; window_name) : void</text><ellipse cx="698.5" cy="63.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="707.5" y="67.0151">~Window() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="688.5" x2="989.5" y1="73.6094" y2="73.6094"/><polygon fill="#FFFF44" points="698.5,79.6094,702.5,83.6094,698.5,87.6094,694.5,83.6094" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="707.5" y="87.8198">draw() : void</text><ellipse cx="698.5" cy="97.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="61" x="707.5" y="100.6245">init() : bool</text><polygon fill="#FFFF44" points="698.5,105.2188,702.5,109.2188,698.5,113.2188,694.5,109.2188" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="707.5" y="113.4292">init_glfw() : bool</text><polygon fill="#FFFF44" points="698.5,118.0234,702.5,122.0234,698.5,126.0234,694.5,122.0234" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="707.5" y="126.2339">init_gui() : bool</text><polygon fill="#FFFF44" points="698.5,130.8281,702.5,134.8281,698.5,138.8281,694.5,134.8281" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="707.5" y="139.0386">render() : void</text><ellipse cx="698.5" cy="148.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="62" x="707.5" y="151.8433">run() : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="688.5" x2="989.5" y1="158.4375" y2="158.4375"/><polygon fill="none" points="698.5,164.4375,702.5,168.4375,698.5,172.4375,694.5,168.4375" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="67" x="707.5" y="172.6479">height_ : int</text><polygon fill="none" points="698.5,177.2422,702.5,181.2422,698.5,185.2422,694.5,181.2422" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="707.5" y="185.4526">name_ : std::string</text><polygon fill="none" points="698.5,190.0469,702.5,194.0469,698.5,198.0469,694.5,194.0469" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="62" x="707.5" y="198.2573">width_ : int</text><polygon fill="none" points="698.5,202.8516,702.5,206.8516,698.5,210.8516,694.5,206.8516" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="707.5" y="211.062">window_ : GLFWwindow *</text><!--MD5=[1534a4308402219dcc9d36ea975c6152]
class C_0000662129422299287905--><rect fill="#FEFECE" filter="url(#f1t6s3q0yq7gcc)" height="273.6797" id="C_0000662129422299287905" style="stroke: #A80036; stroke-width: 1.5;" width="348" x="665" y="279"/><ellipse cx="786.75" cy="295" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M789.7188,300.6406 Q789.1406,300.9375 788.5,301.0781 Q787.8594,301.2344 787.1563,301.2344 Q784.6563,301.2344 783.3281,299.5938 Q782.0156,297.9375 782.0156,294.8125 Q782.0156,291.6875 783.3281,290.0313 Q784.6563,288.375 787.1563,288.375 Q787.8594,288.375 788.5,288.5313 Q789.1563,288.6875 789.7188,288.9844 L789.7188,291.7031 Q789.0938,291.125 788.5,290.8594 Q787.9063,290.5781 787.2813,290.5781 Q785.9375,290.5781 785.25,291.6563 Q784.5625,292.7188 784.5625,294.8125 Q784.5625,296.9063 785.25,297.9844 Q785.9375,299.0469 787.2813,299.0469 Q787.9063,299.0469 788.5,298.7813 Q789.0938,298.5 789.7188,297.9219 L789.7188,300.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="96" x="807.25" y="299.1543">WindowPoisson</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="666" x2="1012" y1="311" y2="311"/><ellipse cx="676" cy="322" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="322" x="685" y="325.2104">WindowPoisson(const std::string &amp; window_name) : void</text><ellipse cx="676" cy="334.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="685" y="338.0151">~WindowPoisson() = default : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="666" x2="1012" y1="344.6094" y2="344.6094"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="673" y="352.6094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="251" x="685" y="358.8198">add_tooltips(const std::string &amp; desc) : void</text><ellipse cx="676" cy="368.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="685" y="371.6245">draw() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="673" y="378.2188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254" x="685" y="384.4292">draw_open_source_image_file_dialog() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="673" y="391.0234"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="249" x="685" y="397.2339">draw_open_target_image_file_dialog() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="673" y="403.8281"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="685" y="410.0386">draw_save_image_file_dialog() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="673" y="416.6328"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="685" y="422.8433">draw_source() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="673" y="429.4375"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="685" y="435.6479">draw_target() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="673" y="442.2422"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="685" y="448.4526">draw_toolbar() : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="666" x2="1012" y1="455.0469" y2="455.0469"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="673" y="463.0469"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="685" y="469.2573">flag_open_source_file_dialog_ : bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="673" y="475.8516"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="685" y="482.062">flag_open_target_file_dialog_ : bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="673" y="488.6563"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="685" y="494.8667">flag_save_file_dialog_ : bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="673" y="501.4609"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="685" y="507.6714">flag_show_source_view_ : bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="673" y="514.2656"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="685" y="520.4761">flag_show_target_view_ : bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="673" y="527.0703"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="284" x="685" y="533.2808">p_source_ : std::shared_ptr&lt;CompSourceImage&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="673" y="539.875"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="276" x="685" y="546.0854">p_target_ : std::shared_ptr&lt;CompTargetImage&gt;</text><!--MD5=[4192062200293effadcc0f8df77b6f22]
link C_0000601154877475481518 to C_0001764073242192532238--><path d="M119.53,540.28 C89.98,567.02 62.16,597.23 41,630 C8.66,680.09 6,699.88 6,759.5 C6,759.5 6,759.5 6,1540 C6,1623.94 53.55,1695.29 115.14,1752.49 " fill="none" id="C_0000601154877475481518-&gt;C_0001764073242192532238" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="118.84,1755.89,114.9355,1746.8482,115.1643,1752.5004,109.5121,1752.7292,118.84,1755.89" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="12,1132.5664,16,1136.5664,12,1140.5664,8,1136.5664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="36" x="19" y="1141.5669">data_</text><!--MD5=[365311dc95d9ffee312aa20a4d938957]
reverse link C_0000406813343211604253 to C_0000601154877475481518--><path d="M300,186.99 C300,218.51 300,256.26 300,291.89 " fill="none" id="C_0000406813343211604253&lt;-C_0000601154877475481518" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="293,186.77,300,166.77,307,186.77,293,186.77" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[ae6ae45a606ee32f6573a6b2923d2e8b]
link C_0001353273692217991106 to C_0001764073242192532238--><path d="M553.09,1695.23 C539.18,1713.87 524.93,1732.95 510.93,1751.7 " fill="none" id="C_0001353273692217991106-&gt;C_0001764073242192532238" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="507.76,1755.95,516.36,1751.15,510.76,1751.95,509.96,1746.35,507.76,1755.95" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[cbb407dbe2d6ecdaadd5ae3b8c1fc0eb]
link C_0001514060338172580813 to C_0001353273692217991106--><path d="M509.13,1186.65 C529.83,1232.13 561.97,1302.77 592.02,1368.81 " fill="none" id="C_0001514060338172580813-&gt;C_0001353273692217991106" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="595.0767" cy="1375.5384" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="591.7634" x2="598.39" y1="1368.2567" y2="1382.82"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="602.3583" x2="587.7951" y1="1372.2251" y2="1378.8517"/><!--MD5=[205faa401d68ed5116089bf6aeeaed61]
link C_0000120826949535865607 to C_0001764073242192532238--><path d="M1119.52,1287.93 C1149.05,1315.72 1174.96,1347.4 1193,1383 C1255.67,1506.7 1277.12,1584.77 1193,1695 C1129.8,1777.82 883.36,1837.07 679.8,1873.07 " fill="none" id="C_0000120826949535865607-&gt;C_0001764073242192532238" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="674.69,1873.97,684.2502,1876.3371,679.6132,1873.097,682.8533,1868.46,674.69,1873.97" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1251" y="1536.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="108" x="1261" y="1543.5669">selected_region_</text><!--MD5=[70a11dd8cb5b123b1f4f466bab63d192]
link C_0000120826949535865607 to C_0001353273692217991106--><path d="M779.11,1306.19 C767.79,1330.02 756.17,1354.48 744.93,1378.15 " fill="none" id="C_0000120826949535865607-&gt;C_0001353273692217991106" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="742.69,1382.87,750.163,1376.4548,744.8341,1378.3531,742.9359,1373.0242,742.69,1382.87" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="767" y="1342.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="56" x="777" y="1349.0669">poisson_</text><!--MD5=[4bc95047338e36798197d3f75f191605]
reverse link C_0000601154877475481518 to C_0000120826949535865607--><path d="M541.8,512.27 C676.49,565.87 818.2,623.39 823,630 C861.04,682.44 867.25,841.73 865.65,967.74 " fill="none" id="C_0000601154877475481518&lt;-C_0000120826949535865607" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="538.86,518.63,522.86,504.74,544.03,505.62,538.86,518.63" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[465243614b57d9d9dc24627cc8314d65]
link C_0000367957705286128040 to C_0000120826949535865607--><path d="M709.95,803.73 C726.63,840.93 752.15,897.81 777.37,954.04 " fill="none" id="C_0000367957705286128040-&gt;C_0000120826949535865607" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="780.3304" cy="960.6287" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="777.0608" x2="783.6" y1="953.3273" y2="967.93"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="787.6317" x2="773.029" y1="957.359" y2="963.8983"/><!--MD5=[172de6e7930c9b78e5bde8fd6cb24a44]
link C_0001697244802963678042 to C_0001764073242192532238--><path d="M233.93,891.13 C148.88,1076.97 25.48,1426.31 145,1695 C153.89,1714.99 165.59,1733.92 179.06,1751.67 " fill="none" id="C_0001697244802963678042-&gt;C_0001764073242192532238" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="182.15,1755.68,179.8514,1746.1031,179.109,1751.711,173.5011,1750.9687,182.15,1755.68" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="105" y="1342.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="60" x="115" y="1349.0669">back_up_</text><!--MD5=[ab570b3bce1d81f0a499db73585eb2c3]
link C_0001697244802963678042 to C_0000120826949535865607--><path d="M493.55,891.17 C529.02,914.93 566.53,940.06 603.48,964.81 " fill="none" id="C_0001697244802963678042-&gt;C_0000120826949535865607" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="607.98,967.83,602.7301,959.497,603.8263,965.0466,598.2767,966.1428,607.98,967.83" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="566" y="927.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="97" x="576" y="934.0669">source_image_</text><!--MD5=[c8c2dbee62ba393e07bf447c80e846eb]
reverse link C_0000601154877475481518 to C_0001697244802963678042--><path d="M300,560.25 C300,583.35 300,607.16 300,629.92 " fill="none" id="C_0000601154877475481518&lt;-C_0001697244802963678042" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="293,560.17,300,540.17,307,560.17,293,560.17" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8c6df3fb5673b974ff5017eed1d86c58]
link C_0000662129422299287905 to C_0001697244802963678042--><path d="M664.75,527.73 C614.94,559.38 560.14,594.2 508.51,627.01 " fill="none" id="C_0000662129422299287905-&gt;C_0001697244802963678042" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="504.16,629.77,513.9017,628.3213,508.3807,627.0893,509.6126,621.5682,504.16,629.77" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="573" y="589.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="61" x="583" y="596.0669">p_target_</text><!--MD5=[6f03b3644b299ec2dae21e3b1ac9b329]
link C_0000662129422299287905 to C_0000120826949535865607--><path d="M879.88,553.18 C881.92,563.21 883.67,573.22 885,583 C902.18,709.33 894.58,853.21 883.26,962.54 " fill="none" id="C_0000662129422299287905-&gt;C_0000120826949535865607" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="882.72,967.72,887.6491,959.1933,883.2486,962.748,879.694,958.3475,882.72,967.72" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="898" y="758.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="65" x="908" y="765.0669">p_source_</text><!--MD5=[5b1b9ba96b4fc135f6ee1e0ad892ef12]
reverse link C_0000701994109645822129 to C_0000662129422299287905--><path d="M839,238.13 C839,251.57 839,265.3 839,278.87 " fill="none" id="C_0000701994109645822129&lt;-C_0000662129422299287905" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="832,238.01,839,218.01,846,238.01,832,238.01" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[b1b38c8d87fca75ccfb39285fa59f89b]
@startuml
abstract "Component" as C_0000406813343211604253
abstract C_0000406813343211604253 {
+Component(std::string label) : void
+~Component() constexpr = default : void
..
{abstract} +draw() = 0 : void
__
#label_ : std::string
}
class "Image" as C_0001764073242192532238
class C_0001764073242192532238 {
+Image() = default : void
+Image(int width, int height, int channels) : void
+Image(int width, int height, int channels, std::unique_ptr<unsigned char[]> image_data) : void
+Image(const Image & other) : void
+Image(Image &&) noexcept = default : void
+~Image() = default : void
..
+operator=(const Image & other) : Image &
+operator=(Image &&) noexcept = default : Image &
..
+as_eigen_mask() : Eigen::MatrixXi
+channels() const : int
+data() const : unsigned char *
+get_pixel(int x, int y) const : std::vector<unsigned char>
+height() const : int
+initialize(int width, int height, int channels, std::unique_ptr<unsigned char[]> image_data) : void
+set_pixel(int x, int y, const std::vector<unsigned char> & values) : void
+width() const : int
__
-channels_ : int
-height_ : int
-image_data_ : std::unique_ptr<unsigned char[]>
-width_ : int
}
class "ImageEditor" as C_0000601154877475481518
class C_0000601154877475481518 {
+ImageEditor(const std::string & label, const std::string & filename) : void
+~ImageEditor() : void
..
+draw() : void
-draw_image() const : void
+get_image_size() const : ImVec2
-load_gltexture() const : void
+save_to_disk(const std::string & filename) : void
+set_position(const ImVec2 & pos) : void
+update() : void
__
#data_ : std::shared_ptr<Image>
#filename_ : std::string
#image_height_ : int
#image_width_ : int
#position_ : ImVec2
#tex_id_ : GLuint
}
class "Poisson" as C_0001353273692217991106
class C_0001353273692217991106 {
+Poisson() : void
+~Poisson() = default : void
..
{static} +CloneTypeList() constexpr : std::vector<CloneType>
{static} +CloneTypeName(const Poisson::CloneType & type) constexpr : std::string
+PoissonInit() : void
+apply_mixed(const Eigen::Vector2i & to_offset, const Eigen::Vector2i & from_offset, const std::shared_ptr<Image> & to, const Image & from) : void
+apply_paste(const Eigen::Vector2i & to_offset, const Eigen::Vector2i & from_offset, const std::shared_ptr<Image> & to, const Image & from) : void
+apply_seamless(const Eigen::Vector2i & to_offset, const Eigen::Vector2i & from_offset, const std::shared_ptr<Image> & to, const Image & from) : void
+apply_type(const Eigen::Vector2i & to_offset, const Eigen::Vector2i & from_offset, const std::shared_ptr<Image> & to, const Image & from, Poisson::CloneType type) : void
+set_mask(Eigen::MatrixXi mask) : void
__
-b_b_ : Eigen::VectorXd
-b_g_ : Eigen::VectorXd
-b_r_ : Eigen::VectorXd
-height_ : int
-index_ : Eigen::MatrixXi
-mask_ : Eigen::MatrixXi
-num_ : int
-solver_ : Eigen::SimplicialLLT<Eigen::SparseMatrix<double>>
-sparse_ : Eigen::SparseMatrix<double>
-width_ : int
}
enum "Poisson::CloneType" as C_0001514060338172580813
enum C_0001514060338172580813 {
kDefault
kPaste
kSeamless
kMixed
}
class "CompSourceImage" as C_0000120826949535865607
class C_0000120826949535865607 {
+CompSourceImage(const std::string & label, const std::string & filename) : void
+~CompSourceImage() noexcept = default : void
..
{static} +RegionTypeList() constexpr : std::vector<RegionType>
{static} +RegionTypeName(const CompSourceImage::RegionType & type) constexpr : std::string
+draw() : void
+enable_selecting(bool flag) : void
+get_data() : std::shared_ptr<Image>
+get_poisson() const : std::shared_ptr<Poisson>
+get_position() const : ImVec2
+get_region() : std::shared_ptr<Image>
+get_region_type() const : CompSourceImage::RegionType
+region_type_name() const : std::string
+select_region() : void
+set_region_type(CompSourceImage::RegionType type) : void
__
-draw_status_ : bool
-end_ : ImVec2
-flag_enable_selecting_region_ : bool
-poisson_ : std::shared_ptr<Poisson>
-poly_points_ : std::vector<ImVec2>
-region_type_ : CompSourceImage::RegionType
-selected_region_ : std::shared_ptr<Image>
-start_ : ImVec2
}
enum "CompSourceImage::RegionType" as C_0000367957705286128040
enum C_0000367957705286128040 {
kDefault
kRect
kPolygon
}
class "CompTargetImage" as C_0001697244802963678042
class C_0001697244802963678042 {
+CompTargetImage(const std::string & label, const std::string & filename) : void
+~CompTargetImage() noexcept = default : void
..
+clone() : void
+clone_type_name() const : std::string
+draw() : void
+get_clone_type() const : Poisson::CloneType
+restore() : void
+set_clone_type(Poisson::CloneType type) : void
+set_realtime(bool flag) : void
+set_source(std::shared_ptr<CompSourceImage> source) : void
__
-back_up_ : std::shared_ptr<Image>
-clone_type_ : Poisson::CloneType
-edit_status_ : bool
-flag_realtime_updating : bool
-mouse_position_ : ImVec2
-source_image_ : std::shared_ptr<CompSourceImage>
}
class "Window" as C_0000701994109645822129
class C_0000701994109645822129 {
+Window(const std::string & window_name) : void
+~Window() : void
..
#draw() : void
+init() : bool
#init_glfw() : bool
#init_gui() : bool
#render() : void
+run() : void
__
#height_ : int
#name_ : std::string
#width_ : int
#window_ : GLFWwindow *
}
class "WindowPoisson" as C_0000662129422299287905
class C_0000662129422299287905 {
+WindowPoisson(const std::string & window_name) : void
+~WindowPoisson() = default : void
..
{static} -add_tooltips(const std::string & desc) : void
+draw() : void
-draw_open_source_image_file_dialog() : void
-draw_open_target_image_file_dialog() : void
-draw_save_image_file_dialog() : void
-draw_source() : void
-draw_target() : void
-draw_toolbar() : void
__
-flag_open_source_file_dialog_ : bool
-flag_open_target_file_dialog_ : bool
-flag_save_file_dialog_ : bool
-flag_show_source_view_ : bool
-flag_show_target_view_ : bool
-p_source_ : std::shared_ptr<CompSourceImage>
-p_target_ : std::shared_ptr<CompTargetImage>
}
C_0000601154877475481518 - -> C_0001764073242192532238 : #data_
C_0000406813343211604253 <|- - C_0000601154877475481518
C_0001353273692217991106 ..> C_0001764073242192532238
C_0001514060338172580813 - -+ C_0001353273692217991106
C_0000120826949535865607 - -> C_0001764073242192532238 : -selected_region_
C_0000120826949535865607 - -> C_0001353273692217991106 : -poisson_
C_0000601154877475481518 <|- - C_0000120826949535865607
C_0000367957705286128040 - -+ C_0000120826949535865607
C_0001697244802963678042 - -> C_0001764073242192532238 : -back_up_
C_0001697244802963678042 - -> C_0000120826949535865607 : -source_image_
C_0000601154877475481518 <|- - C_0001697244802963678042
C_0000662129422299287905 - -> C_0001697244802963678042 : -p_target_
C_0000662129422299287905 - -> C_0000120826949535865607 : -p_source_
C_0000701994109645822129 <|- - C_0000662129422299287905

@enduml

PlantUML version 1.2020.02(Sun Mar 01 10:22:07 UTC 2020)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 11.0.22+7
Operating System: Linux
Default Encoding: UTF-8
Language: en
Country: null
--></g></svg>